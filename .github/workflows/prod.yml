name: Production

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      - name: Check Go version
        run: go version

      - name: Run tests
        run: go test ./...

  integration-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    services:
      db:
        image: postgres:13.3
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5439:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.1

      - name: Install dependencies
        run: go mod tidy

      - name: Build and start services
        run: docker compose up -d --build

      - name: Run integration tests
        run: go test -tags=integration -v ./tests/...

      - name: Stop services
        run: docker compose down

  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.41
        continue-on-error: true
